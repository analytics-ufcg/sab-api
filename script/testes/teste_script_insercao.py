#!/usr/bin/env python
# -*- coding: utf-8 -*-

import unittest
import sys
sys.path.insert(0,'..')
import aux_insert_month

class TestStringMethods(unittest.TestCase):

    def test_retira_ruido(self):
        ultimo_monitoramento = [12,50,500,None,None]
        boaSemPuloDeData = [[12,50,500,40,"2016-06-20"],[12,50,500,60,"2016-06-15"],[12,50,540,50,"2016-06-11"],[12,50,500,40,"2016-06-10"],[12,50,500,40,"2016-06-09"]]
        boaSemPuloDeDataResp = [[12,50,500,40,"2016-06-09",1],[12,50,500,40,"2016-06-10",1],[12,50,540,50,"2016-06-11",1],[12,50,500,60,"2016-06-15",1],[12,50,500,40,"2016-06-20",1]]

        #tipo Alagoas
        boaComPuloDeTodasData = [[12,50,500,40,"2019-06-20"],[12,50,500,60,"2017-06-15"],[12,50,540,50,"2016-12-11"],[12,50,500,40,"2016-09-10"],[12,50,500,40,"2016-06-09"]]
        boaComPuloDeTodasDataResp = [[12,50,500,40,"2016-06-09",1],[12,50,500,40,"2016-09-10",1],[12,50,540,50,"2016-12-11",1],[12,50,500,60,"2017-06-15",1],[12,50,500,40,"2019-06-20",1]]

        #Tipo 4
        boaComPuloDeData = [[12,50,500,80,"2017-06-20"],[12,50,500,100,"2017-06-15"],[12,50,500,40,"2016-07-11"],[12,50,500,40,"2016-07-10"],[12,50,500,40,"2016-06-09"]]
        boaComPuloDeDataResp = [[12,50,500,40,"2016-06-09",1],[12,50,500,40,"2016-07-10",1],[12,50,500,40,"2016-07-11",1],[12,50,500,100,"2017-06-15",1],[12,50,500,80,"2017-06-20",1]]
        #Tipo 5
        boaComPuloDeDataDiferente = [ [12,50,500,60,"2017-06-20"],[12,50,500,40,"2017-06-15"],[12,50,500,40,"2016-07-11"],[12,50,500,40,"2016-07-10"],[12,50,500,40,"2016-06-09"]]
        boaComPuloDeDataDiferenteResp = [[12,50,500,40,"2016-06-09",1],[12,50,500,40,"2016-07-10",1],[12,50,500,40,"2016-07-11",1],[12,50,500,40,"2017-06-15",1],[12,50,500,60,"2017-06-20",1]]
        #Tipo 6
        boaComPuloDeDistanciaData = [[12,50,500,40,"2017-06-20"],[12,50,500,60,"2017-06-15"],[12,50,0,0,"2016-12-11"],[12,50,500,40,"2016-07-10"],[12,50,500,40,"2016-06-09"]]
        boaComPuloDeDistanciaDataResp = [[12,50,500,40,"2016-06-09",1],[12,50,500,40,"2016-07-10",1],[12,50,0,0,"2016-12-11",1],[12,50,500,60,"2017-06-15",1],[12,50,500,40,"2017-06-20",1]]
        #Tipo 2
        RUIM2 = [[12,50,500,60,"2016-06-20"],[12,50,500,60,"2016-06-15"],[12,50,540,0,"2016-06-11"],[12,50,500,40,"2016-06-10"],[12,50,500,40,"2016-06-09"]]
        RUIM2Resp = [[12,50,500,40,"2016-06-09",1],[12,50,500,40,"2016-06-10",1],[12,50,540,0,"2016-06-11",0],[12,50,500,60,"2016-06-15",1],[12,50,500,60,"2016-06-20",1]]

        #Tipo 3
        RUIM3 = [[12,50,500,100,"2017-06-20"],[12,50,500,100,"2017-06-15"],[12,50,500,100,"2016-07-13"],[12,50,0,0,"2016-07-12"],[12,50,0,0,"2016-07-11"],[12,50,500,100,"2016-07-10"],[12,50,500,100,"2016-06-09"],[12,50,500,100,"2016-06-08"],[12,50,500,100,"2016-06-07"]]
        RUIM3Resp = [[12,50,500,100,"2016-06-07",1],[12,50,500,100,"2016-06-08",1],[12,50,500,100,"2016-06-09",1],[12,50,500,100,"2016-07-10",1],[12,50,0,0,"2016-07-11",0],[12,50,0,0,"2016-07-12",0],[12,50,500,100,"2016-07-13",1],[12,50,500,100,"2017-06-15",1],[12,50,500,100,"2017-06-20",1]]
        #Tipo 7
        RUIM7 = [[12,50,500,80,"2017-06-22"],[12,50,500,80,"2017-06-21"],[12,50,500,80,"2017-06-20"],[12,50,500,0,"2017-06-15"],[12,50,500,80,"2016-12-11"],[12,50,500,0,"2016-07-10"],[12,50,500,80,"2016-06-09"],[12,50,500,80,"2016-06-08"],[12,50,500,80,"2016-06-07"],[12,50,500,80,"2016-06-06"]]
        RUIM7Resp = [[12,50,500,80,"2016-06-06",1],[12,50,500,80,"2016-06-07",1],[12,50,500,80,"2016-06-08",1],[12,50,500,80,"2016-06-09",1],[12,50,500,0,"2016-07-10",0],[12,50,500,80,"2016-12-11",1],[12,50,500,0,"2017-06-15",0],[12,50,500,80,"2017-06-20",1],[12,50,500,80,"2017-06-21",1],[12,50,500,80,"2017-06-22",1]]

        self.assertEqual(aux_insert_month.retira_ruido(boaSemPuloDeData, ultimo_monitoramento), boaSemPuloDeDataResp)

        self.assertEqual(aux_insert_month.retira_ruido(boaComPuloDeTodasData, ultimo_monitoramento), boaComPuloDeTodasDataResp)
        self.assertEqual(aux_insert_month.retira_ruido(boaComPuloDeData, ultimo_monitoramento), boaComPuloDeDataResp)
        self.assertEqual(aux_insert_month.retira_ruido(boaComPuloDeDataDiferente, ultimo_monitoramento), boaComPuloDeDataDiferenteResp)
        self.assertEqual(aux_insert_month.retira_ruido(boaComPuloDeDistanciaData, ultimo_monitoramento), boaComPuloDeDistanciaDataResp)

        
        self.assertEqual(aux_insert_month.retira_ruido(RUIM2, ultimo_monitoramento), RUIM2Resp)
        self.assertEqual(aux_insert_month.retira_ruido(RUIM3, ultimo_monitoramento), RUIM3Resp)
        self.assertEqual(aux_insert_month.retira_ruido(RUIM7, ultimo_monitoramento), RUIM7Resp)

if __name__ == '__main__':
    unittest.main()
